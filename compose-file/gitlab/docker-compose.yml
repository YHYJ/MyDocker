# File: docker-compose.yml
# Author: YJ
# Email: yj1516268@outlook.com
# Created Time: 2019-04-29 14:34:46

# Description: GitLab Community Edition docker image based on the Omnibus package

# 需要几分钟进行初始化和健康检查
# 第一次运行不确定能否通过检测时最好去掉`-d`参数
# ---------------------------------------------- #
# gitlab image已经预置了用到的服务，包括:
#   nginx
#   redis
#   postgresql
#   ContainerRegistry
#   ......
# ---------------------------------------------- #
# GITLAB_OMNIBUS_CONFIG: |
#   external_url                外部访问的URL
#   letsencrypt['enable']       是否使用Let's Encrypt证书

version: '3'
services:
  gitlab:
    image: 'gitlab/gitlab-ce'
    container_name: 'gitlab'
    hostname: 'gitlab-docker'
    restart: 'unless-stopped'   # no, unless-stopped, always, on-failure:<max-retries>
    privileged: false
    ports:
      - '127.0.0.1:22:22'       # SSH
      - '127.0.0.1:80:80'       # HTTP
      - '127.0.0.1:443:443'     # HTTPS
      - '127.0.0.1:5005:5005'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - 'config:/etc/gitlab'
      - 'data:/var/opt/gitlab'
      - 'logs:/var/log/gitlab'
    networks:
      gitlab: {}
    environment:
      TZ: 'Asia/Shanghai'
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://127.0.0.1:443'
        letsencrypt['enable'] = false
        high_availability['mountpoint'] = ['/etc/gitlab', '/var/opt/gitlab', '/var/log/gitlab']
        nginx['enable'] = true
        nginx['worker_processes'] = 2
        nginx['worker_connections'] = 512
        nginx['keepalive_timeout'] = 300
        nginx['cache_max_size'] = '200MB'
        nginx['redirect_http_to_https'] = true
        nginx['redirect_http_to_https_port'] = 80
        nginx['ssl_certificate'] = '/etc/gitlab/ssl/gitlab.crt'
        nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/gitlab.key'
        unicorn['worker_processes'] = 1
        unicorn['worker_memory_limit_min'] = '300 * 1 << 20'
        unicorn['worker_memory_limit_max'] = '400 * 1 << 20'
        unicorn['worker_timeout'] = 15
        sidekiq['concurrency'] = 10
        sidekiq_cluster['enable'] = false
        sidekiq_cluster['ha'] = false
        redis['maxclients'] = 100
        postgresql['shared_buffers'] = '256MB'
        postgresql['max_connections'] = 30
        postgresql['work_mem'] = '8MB'
        postgresql['maintenance_work_mem'] = '16MB'
        postgresql['effective_cache_size'] = '1MB'
        postgresql['checkpoint_timeout'] = '5min'
        postgresql['checkpoint_warning'] = '30s'
        mattermost['enable'] = false
        mattermost_nginx['enable'] = false
        gitlab_pages['enable'] = false
        pages_nginx['enable'] = false
        registry_external_url 'https://127.0.0.1:5005'
        gitlab_rails['registry_host'] = '127.0.0.1'
        gitlab_rails['registry_port'] = '5005'
        registry_nginx['ssl_certificate'] = '/etc/gitlab/ssl/gitlab.crt'
        registry_nginx['ssl_certificate_key'] = '/etc/gitlab/ssl/gitlab.key'
    labels:
      servicename: 'gitlab'
    logging:
      driver: 'json-file'       # none, local, json-file(default), ...
      options:
        max-size: '10m'
        max-file: '3'
        tag: '{{.Name}}/{{.ID}}/{{.ImageName}}/{{.ImageID}}'
        labels: 'servicename'


volumes:
  config:
    name: 'gitlab-config'
  data:
    name: 'gitlab-data'
  logs:
    name: 'gitlab-logs'


networks:
  gitlab:
    name: 'gitlab'
